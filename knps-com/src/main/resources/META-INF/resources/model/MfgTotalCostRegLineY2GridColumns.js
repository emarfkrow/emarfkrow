/**
 * MFG_TOTAL_COST_REG_LINE_Y2グリッド定義
 */

let MfgTotalCostRegLineY2GridColumns = [
    Column.cell('YY', Messages['MfgTotalCostRegLineY2Grid.yy'], 40, 'primaryKey', null),
    Column.cell('PRO_GROUP_NO', Messages['MfgTotalCostRegLineY2Grid.proGroupNo'], 20, 'primaryKey', null),
    Column.cell('HINBAN', Messages['MfgTotalCostRegLineY2Grid.hinban'], 250, 'primaryKey', null),
    Column.cell('ROUTING', Messages['MfgTotalCostRegLineY2Grid.routing'], 20, 'primaryKey', null),
    Column.refer('WC_CODE', Messages['MfgTotalCostRegLineY2Grid.wcCode'], 30, '', 'WC_NAME'),
    Column.refer('SUP_CODE', Messages['MfgTotalCostRegLineY2Grid.supCode'], 60, '', 'SUP_NAME'),
    Column.text('OPE_DETAIL', Messages['MfgTotalCostRegLineY2Grid.opeDetail'], 100, '', null),
    Column.select('LAST_ROUTING_KBN', Messages['MfgTotalCostRegLineY2Grid.lastRoutingKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.check('TOTAL_COST_TARGET_FLAG', Messages['MfgTotalCostRegLineY2Grid.totalCostTargetFlag'], 10, ''),
    Column.select('COST_RATE_KBN', Messages['MfgTotalCostRegLineY2Grid.costRateKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('UNIT_COST_FIRST', Messages['MfgTotalCostRegLineY2Grid.unitCostFirst'], 90, '', null),
    Column.text('UNIT_COST_SECOND', Messages['MfgTotalCostRegLineY2Grid.unitCostSecond'], 90, '', null),
    Column.text('TOTAL_UNIT_COST', Messages['MfgTotalCostRegLineY2Grid.totalUnitCost'], 90, '', null),
    Column.text('SUM_COST_FIRST', Messages['MfgTotalCostRegLineY2Grid.sumCostFirst'], 90, '', null),
    Column.text('SUM_COST_SECOND', Messages['MfgTotalCostRegLineY2Grid.sumCostSecond'], 90, '', null),
    Column.text('TOTAL_SUM_COST', Messages['MfgTotalCostRegLineY2Grid.totalSumCost'], 90, '', null),
    Column.text('OPE_COUNTS', Messages['MfgTotalCostRegLineY2Grid.opeCounts'], 50, '', null),
    Column.text('OPE_AMOUNTS', Messages['MfgTotalCostRegLineY2Grid.opeAmounts'], 120, '', null),
    Column.text('UNIT_WEIGHT', Messages['MfgTotalCostRegLineY2Grid.unitWeight'], 110, '', null),
    Column.text('OPE_TIME', Messages['MfgTotalCostRegLineY2Grid.opeTime'], 90, '', null),
    Column.text('HUM_PRE_TIME', Messages['MfgTotalCostRegLineY2Grid.humPreTime'], 90, '', null),
    Column.text('HUM_ACT_TIME', Messages['MfgTotalCostRegLineY2Grid.humActTime'], 90, '', null),
    Column.text('MAC_PRE_TIME', Messages['MfgTotalCostRegLineY2Grid.macPreTime'], 90, '', null),
    Column.text('MAC_ACT_TIME', Messages['MfgTotalCostRegLineY2Grid.macActTime'], 90, '', null),
    Column.text('SUM_UNIT_SUPPLY', Messages['MfgTotalCostRegLineY2Grid.sumUnitSupply'], 100, '', null),
    Column.text('MATERIALS_COST', Messages['MfgTotalCostRegLineY2Grid.materialsCost'], 90, '', null),
    Column.text('HUM_LABOR_COST_FIRST', Messages['MfgTotalCostRegLineY2Grid.humLaborCostFirst'], 90, '', null),
    Column.text('HUM_EXPENSES_FIRST', Messages['MfgTotalCostRegLineY2Grid.humExpensesFirst'], 90, '', null),
    Column.text('HUM_LABOR_COST_SECOND', Messages['MfgTotalCostRegLineY2Grid.humLaborCostSecond'], 90, '', null),
    Column.text('HUM_EXPENSES_SECOND', Messages['MfgTotalCostRegLineY2Grid.humExpensesSecond'], 90, '', null),
    Column.text('MAC_LABOR_COST_FIRST', Messages['MfgTotalCostRegLineY2Grid.macLaborCostFirst'], 90, '', null),
    Column.text('MAC_EXPENSES_FIRST', Messages['MfgTotalCostRegLineY2Grid.macExpensesFirst'], 90, '', null),
    Column.text('MAC_LABOR_COST_SECOND', Messages['MfgTotalCostRegLineY2Grid.macLaborCostSecond'], 90, '', null),
    Column.text('MAC_EXPENSES_SECOND', Messages['MfgTotalCostRegLineY2Grid.macExpensesSecond'], 90, '', null),
    Column.select('DATA_SOURCE_KBN', Messages['MfgTotalCostRegLineY2Grid.dataSourceKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.cell('TIME_STAMP_CREATE', Messages['MfgTotalCostRegLineY2Grid.timeStampCreate'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('TIME_STAMP_CHANGE', Messages['MfgTotalCostRegLineY2Grid.timeStampChange'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('USER_ID_CREATE', Messages['MfgTotalCostRegLineY2Grid.userIdCreate'], 100, 'metaInfo', null),
    Column.cell('USER_ID_CHANGE', Messages['MfgTotalCostRegLineY2Grid.userIdChange'], 100, 'metaInfo', null),
];
