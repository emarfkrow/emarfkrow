/**
 * MST_HINBAN_BKグリッド定義
 */

let MstHinbanBkGridColumns = [
    Column.cell('YY', Messages['MstHinbanBkGrid.yy'], 40, 'primaryKey', null),
    Column.cell('HINBAN', Messages['MstHinbanBkGrid.hinban'], 250, 'primaryKey', null),
    Column.select('HINBAN_CODE', Messages['MstHinbanBkGrid.hinbanCode'], 100, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('ITEM', Messages['MstHinbanBkGrid.item'], 300, '', null),
    Column.select('ITEM_KBN', Messages['MstHinbanBkGrid.itemKbn'], 20, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.select('SHIKAKE_KBN', Messages['MstHinbanBkGrid.shikakeKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('LOT_SIZE', Messages['MstHinbanBkGrid.lotSize'], 60, '', null),
    Column.text('COUNTS', Messages['MstHinbanBkGrid.counts'], 60, '', null),
    Column.refer('UNIT_CODE', Messages['MstHinbanBkGrid.unitCode'], 20, '', 'UNIT_NAME'),
    Column.refer('ACCOUNT_CODE', Messages['MstHinbanBkGrid.accountCode'], 50, '', 'ACCOUNT_NAME'),
    Column.text('SUPPLY_CHANGE', Messages['MstHinbanBkGrid.supplyChange'], 10, '', null),
    Column.text('SUPPLY_PERMISSION', Messages['MstHinbanBkGrid.supplyPermission'], 10, '', null),
    Column.text('OFF_POST_NO', Messages['MstHinbanBkGrid.offPostNo'], 30, '', null),
    Column.text('ISUUE_POST_NO', Messages['MstHinbanBkGrid.isuuePostNo'], 40, '', null),
    Column.text('STORE_NO', Messages['MstHinbanBkGrid.storeNo'], 100, '', null),
    Column.select('STOCKS_KIND_KBN', Messages['MstHinbanBkGrid.stocksKindKbn'], 20, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.select('HINGUN_KBN', Messages['MstHinbanBkGrid.hingunKbn'], 30, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('ELEC_INV_CONTROL', Messages['MstHinbanBkGrid.elecInvControl'], 10, '', null),
    Column.select('REST_ARTICLE_KBN', Messages['MstHinbanBkGrid.restArticleKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('REST_ARTICLE_MAX', Messages['MstHinbanBkGrid.restArticleMax'], 110, '', null),
    Column.select('COST_AMOUNT_KBN', Messages['MstHinbanBkGrid.costAmountKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.select('F_COST_AMOUNT_KBN', Messages['MstHinbanBkGrid.fCostAmountKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.select('S_COST_AMOUNT_KBN', Messages['MstHinbanBkGrid.sCostAmountKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.refer('HINBAN_OPE_CODE', Messages['MstHinbanBkGrid.hinbanOpeCode'], 100, '', 'HINBAN_OPE_NAME'),
    Column.check('PERMISSION_FLAG', Messages['MstHinbanBkGrid.permissionFlag'], 10, ''),
    Column.text('VERSION', Messages['MstHinbanBkGrid.version'], 50, '', null),
    Column.select('PLAN_CODE', Messages['MstHinbanBkGrid.planCode'], 300, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.select('POISON_KBN', Messages['MstHinbanBkGrid.poisonKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('MATERIAL', Messages['MstHinbanBkGrid.material'], 50, '', null),
    Column.text('MATERIAL_SIZE', Messages['MstHinbanBkGrid.materialSize'], 300, '', null),
    Column.text('MAKER', Messages['MstHinbanBkGrid.maker'], 300, '', null),
    Column.text('MATERIAL_RECYCLE', Messages['MstHinbanBkGrid.materialRecycle'], 50, '', null),
    Column.text('MAKER_SIMUKE', Messages['MstHinbanBkGrid.makerSimuke'], 30, '', null),
    Column.text('MAKER_WEIGHT', Messages['MstHinbanBkGrid.makerWeight'], 70, '', null),
    Column.text('ACT_INV_FIRST', Messages['MstHinbanBkGrid.actInvFirst'], 10, '', null),
    Column.text('ACT_INV_LAST', Messages['MstHinbanBkGrid.actInvLast'], 10, '', null),
    Column.text('SUP_UNIT', Messages['MstHinbanBkGrid.supUnit'], 90, '', null),
    Column.text('ROUTING_DEF_GROUP', Messages['MstHinbanBkGrid.routingDefGroup'], 20, '', null),
    Column.text('COST_CALCULATE_GROUP', Messages['MstHinbanBkGrid.costCalculateGroup'], 20, '', null),
    Column.text('KBN1', Messages['MstHinbanBkGrid.kbn1'], 50, '', null),
    Column.text('KBN2', Messages['MstHinbanBkGrid.kbn2'], 40, '', null),
    Column.text('KBN3', Messages['MstHinbanBkGrid.kbn3'], 50, '', null),
    Column.text('STOCK_STATUS', Messages['MstHinbanBkGrid.stockStatus'], 10, '', null),
    Column.date('STOCK_STATUS_DATE', Messages['MstHinbanBkGrid.stockStatusDate'], 80, '', null),
    Column.check('PRINT_STRUCTURE_FLG', Messages['MstHinbanBkGrid.printStructureFlg'], 10, ''),
    Column.check('PRINT_WORK_FLOW_FLG', Messages['MstHinbanBkGrid.printWorkFlowFlg'], 10, ''),
    Column.check('PRINT_WORK_RESULT_FLG', Messages['MstHinbanBkGrid.printWorkResultFlg'], 10, ''),
    Column.check('PRINT_SHIP_SHEET_FLG', Messages['MstHinbanBkGrid.printShipSheetFlg'], 10, ''),
    Column.check('PRINT_INSPECT_FLG', Messages['MstHinbanBkGrid.printInspectFlg'], 10, ''),
    Column.check('PRINT_PRODUCT_BOX_FLG', Messages['MstHinbanBkGrid.printProductBoxFlg'], 10, ''),
    Column.check('PRINT_HINBAN_STRUCT_FLG', Messages['MstHinbanBkGrid.printHinbanStructFlg'], 10, ''),
    Column.check('SEMI_PRODUCT_FLG', Messages['MstHinbanBkGrid.semiProductFlg'], 10, ''),
    Column.text('STOCK_MANAGEMENT_SECTION', Messages['MstHinbanBkGrid.stockManagementSection'], 10, '', null),
    Column.cell('TIME_STAMP_CREATE', Messages['MstHinbanBkGrid.timeStampCreate'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('TIME_STAMP_CHANGE', Messages['MstHinbanBkGrid.timeStampChange'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('USER_ID_CREATE', Messages['MstHinbanBkGrid.userIdCreate'], 100, 'metaInfo', null),
    Column.cell('USER_ID_CHANGE', Messages['MstHinbanBkGrid.userIdChange'], 100, 'metaInfo', null),
    Column.text('TOTAL_LT', Messages['MstHinbanBkGrid.totalLt'], 70, '', null),
    Column.select('COMPANY_DIV_CODE', Messages['MstHinbanBkGrid.companyDivCode'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('KBN4', Messages['MstHinbanBkGrid.kbn4'], 100, '', null),
    Column.text('KBN5', Messages['MstHinbanBkGrid.kbn5'], 100, '', null),
    Column.text('KBN6', Messages['MstHinbanBkGrid.kbn6'], 100, '', null),
    Column.text('ROHS', Messages['MstHinbanBkGrid.rohs'], 10, '', null),
    Column.text('TANTAI_LT', Messages['MstHinbanBkGrid.tantaiLt'], 70, '', null),
    Column.text('TSUKESU', Messages['MstHinbanBkGrid.tsukesu'], 30, '', null),
    Column.text('EX_TAX_RATE', Messages['MstHinbanBkGrid.exTaxRate'], 20, '', null),
    Column.text('MEMO', Messages['MstHinbanBkGrid.memo'], 300, '', null),
    Column.select('HAIBAN_KBN', Messages['MstHinbanBkGrid.haibanKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.month('HAIBAN_YM', Messages['MstHinbanBkGrid.haibanYm'], 60, '', null),
];
