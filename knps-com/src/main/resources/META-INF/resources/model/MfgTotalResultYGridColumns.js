/**
 * MFG_TOTAL_RESULT_Yグリッド定義
 */

let MfgTotalResultYGridColumns = [
    Column.cell('RESULT_DATE', Messages['MfgTotalResultYGrid.resultDate'], 60, 'primaryKey', null),
    Column.cell('PRO_GROUP_NO', Messages['MfgTotalResultYGrid.proGroupNo'], 20, 'primaryKey', null),
    Column.cell('HINBAN', Messages['MfgTotalResultYGrid.hinban'], 250, 'primaryKey', null),
    Column.cell('ROUTING', Messages['MfgTotalResultYGrid.routing'], 20, 'primaryKey', null),
    Column.refer('WC_CODE', Messages['MfgTotalResultYGrid.wcCode'], 30, 'primaryKey', 'WC_NAME'),
    Column.cell('OPE_DETAIL', Messages['MfgTotalResultYGrid.opeDetail'], 100, 'primaryKey', null),
    Column.text('HUM_PRE_TIME', Messages['MfgTotalResultYGrid.humPreTime'], 80, '', null),
    Column.text('HUM_ACT_TIME', Messages['MfgTotalResultYGrid.humActTime'], 80, '', null),
    Column.text('MAC_PRE_TIME', Messages['MfgTotalResultYGrid.macPreTime'], 80, '', null),
    Column.text('MAC_ACT_TIME', Messages['MfgTotalResultYGrid.macActTime'], 80, '', null),
    Column.text('GOOD_COUNTS', Messages['MfgTotalResultYGrid.goodCounts'], 60, '', null),
    Column.text('REJECT_COUNTS', Messages['MfgTotalResultYGrid.rejectCounts'], 60, '', null),
    Column.refer('UNIT_CODE', Messages['MfgTotalResultYGrid.unitCode'], 20, '', 'UNIT_NAME'),
    Column.text('ACT_LT', Messages['MfgTotalResultYGrid.actLt'], 80, '', null),
    Column.text('ACT_WAIT_TIME', Messages['MfgTotalResultYGrid.actWaitTime'], 80, '', null),
    Column.text('EXP_WAIT_TIME', Messages['MfgTotalResultYGrid.expWaitTime'], 80, '', null),
    Column.text('EXP_PRE_TIME', Messages['MfgTotalResultYGrid.expPreTime'], 80, '', null),
    Column.text('EXP_PRO_TIME', Messages['MfgTotalResultYGrid.expProTime'], 80, '', null),
    Column.text('EXP_REST_TIME', Messages['MfgTotalResultYGrid.expRestTime'], 80, '', null),
    Column.text('EXP_CHOKO_TIME', Messages['MfgTotalResultYGrid.expChokoTime'], 80, '', null),
    Column.text('EXP_TROUB_TIME', Messages['MfgTotalResultYGrid.expTroubTime'], 80, '', null),
    Column.text('EXP_SELF_MOD_TIME', Messages['MfgTotalResultYGrid.expSelfModTime'], 80, '', null),
    Column.text('EXP_OTHR_MOD_TIME', Messages['MfgTotalResultYGrid.expOthrModTime'], 80, '', null),
    Column.text('EXP_ETC_TIME', Messages['MfgTotalResultYGrid.expEtcTime'], 80, '', null),
    Column.text('VOLUME_WEIGHT', Messages['MfgTotalResultYGrid.volumeWeight'], 110, '', null),
    Column.text('UNIT_WEIGHT', Messages['MfgTotalResultYGrid.unitWeight'], 110, '', null),
    Column.text('END_MATERIAL_WEIGHT', Messages['MfgTotalResultYGrid.endMaterialWeight'], 110, '', null),
    Column.text('PRO_COUNTS', Messages['MfgTotalResultYGrid.proCounts'], 30, '', null),
    Column.text('LAST_ROUTING', Messages['MfgTotalResultYGrid.lastRouting'], 10, '', null),
    Column.cell('TIME_STAMP_CREATE', Messages['MfgTotalResultYGrid.timeStampCreate'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('TIME_STAMP_CHANGE', Messages['MfgTotalResultYGrid.timeStampChange'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('USER_ID_CREATE', Messages['MfgTotalResultYGrid.userIdCreate'], 100, 'metaInfo', null),
    Column.cell('USER_ID_CHANGE', Messages['MfgTotalResultYGrid.userIdChange'], 100, 'metaInfo', null),
];
