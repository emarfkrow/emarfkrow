/**
 * MFG_TOTAL_COST_REG_LINE_Yグリッド定義
 */

let MfgTotalCostRegLineYGridColumns = [
    Column.cell('YY', Messages['MfgTotalCostRegLineYGrid.yy'], 40, 'primaryKey', null),
    Column.cell('PRO_GROUP_NO', Messages['MfgTotalCostRegLineYGrid.proGroupNo'], 20, 'primaryKey', null),
    Column.cell('HINBAN', Messages['MfgTotalCostRegLineYGrid.hinban'], 250, 'primaryKey', null),
    Column.cell('ROUTING', Messages['MfgTotalCostRegLineYGrid.routing'], 20, 'primaryKey', null),
    Column.refer('WC_CODE', Messages['MfgTotalCostRegLineYGrid.wcCode'], 30, '', 'WC_NAME'),
    Column.refer('SUP_CODE', Messages['MfgTotalCostRegLineYGrid.supCode'], 60, '', 'SUP_NAME'),
    Column.text('OPE_DETAIL', Messages['MfgTotalCostRegLineYGrid.opeDetail'], 100, '', null),
    Column.select('LAST_ROUTING_KBN', Messages['MfgTotalCostRegLineYGrid.lastRoutingKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.check('TOTAL_COST_TARGET_FLAG', Messages['MfgTotalCostRegLineYGrid.totalCostTargetFlag'], 10, ''),
    Column.select('COST_RATE_KBN', Messages['MfgTotalCostRegLineYGrid.costRateKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.text('UNIT_COST_FIRST', Messages['MfgTotalCostRegLineYGrid.unitCostFirst'], 90, '', null),
    Column.text('UNIT_COST_SECOND', Messages['MfgTotalCostRegLineYGrid.unitCostSecond'], 90, '', null),
    Column.text('TOTAL_UNIT_COST', Messages['MfgTotalCostRegLineYGrid.totalUnitCost'], 90, '', null),
    Column.text('SUM_COST_FIRST', Messages['MfgTotalCostRegLineYGrid.sumCostFirst'], 90, '', null),
    Column.text('SUM_COST_SECOND', Messages['MfgTotalCostRegLineYGrid.sumCostSecond'], 90, '', null),
    Column.text('TOTAL_SUM_COST', Messages['MfgTotalCostRegLineYGrid.totalSumCost'], 90, '', null),
    Column.text('OPE_COUNTS', Messages['MfgTotalCostRegLineYGrid.opeCounts'], 50, '', null),
    Column.text('OPE_AMOUNTS', Messages['MfgTotalCostRegLineYGrid.opeAmounts'], 120, '', null),
    Column.text('UNIT_WEIGHT', Messages['MfgTotalCostRegLineYGrid.unitWeight'], 110, '', null),
    Column.text('OPE_TIME', Messages['MfgTotalCostRegLineYGrid.opeTime'], 90, '', null),
    Column.text('HUM_PRE_TIME', Messages['MfgTotalCostRegLineYGrid.humPreTime'], 90, '', null),
    Column.text('HUM_ACT_TIME', Messages['MfgTotalCostRegLineYGrid.humActTime'], 90, '', null),
    Column.text('MAC_PRE_TIME', Messages['MfgTotalCostRegLineYGrid.macPreTime'], 90, '', null),
    Column.text('MAC_ACT_TIME', Messages['MfgTotalCostRegLineYGrid.macActTime'], 90, '', null),
    Column.text('SUM_UNIT_SUPPLY', Messages['MfgTotalCostRegLineYGrid.sumUnitSupply'], 100, '', null),
    Column.text('MATERIALS_COST', Messages['MfgTotalCostRegLineYGrid.materialsCost'], 90, '', null),
    Column.text('HUM_LABOR_COST_FIRST', Messages['MfgTotalCostRegLineYGrid.humLaborCostFirst'], 90, '', null),
    Column.text('HUM_EXPENSES_FIRST', Messages['MfgTotalCostRegLineYGrid.humExpensesFirst'], 90, '', null),
    Column.text('HUM_LABOR_COST_SECOND', Messages['MfgTotalCostRegLineYGrid.humLaborCostSecond'], 90, '', null),
    Column.text('HUM_EXPENSES_SECOND', Messages['MfgTotalCostRegLineYGrid.humExpensesSecond'], 90, '', null),
    Column.text('MAC_LABOR_COST_FIRST', Messages['MfgTotalCostRegLineYGrid.macLaborCostFirst'], 90, '', null),
    Column.text('MAC_EXPENSES_FIRST', Messages['MfgTotalCostRegLineYGrid.macExpensesFirst'], 90, '', null),
    Column.text('MAC_LABOR_COST_SECOND', Messages['MfgTotalCostRegLineYGrid.macLaborCostSecond'], 90, '', null),
    Column.text('MAC_EXPENSES_SECOND', Messages['MfgTotalCostRegLineYGrid.macExpensesSecond'], 90, '', null),
    Column.select('DATA_SOURCE_KBN', Messages['MfgTotalCostRegLineYGrid.dataSourceKbn'], 10, '', { json: 'MstCodeValueSearch.json', paramkey: 'code_nm', value: 'CODE_VALUE', label: 'CODE_VALUE_MEI' }),
    Column.cell('TIME_STAMP_CREATE', Messages['MfgTotalCostRegLineYGrid.timeStampCreate'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('TIME_STAMP_CHANGE', Messages['MfgTotalCostRegLineYGrid.timeStampChange'], 70, 'metaInfo', Slick.Formatters.Extends.DateTime),
    Column.cell('USER_ID_CREATE', Messages['MfgTotalCostRegLineYGrid.userIdCreate'], 100, 'metaInfo', null),
    Column.cell('USER_ID_CHANGE', Messages['MfgTotalCostRegLineYGrid.userIdChange'], 100, 'metaInfo', null),
    Column.text('GROSS_SUM_COST_FIRST', Messages['MfgTotalCostRegLineYGrid.grossSumCostFirst'], 90, '', null),
    Column.text('GROSS_SUM_COST_SECOND', Messages['MfgTotalCostRegLineYGrid.grossSumCostSecond'], 90, '', null),
    Column.text('TOTAL_GROSS_SUM_COST', Messages['MfgTotalCostRegLineYGrid.totalGrossSumCost'], 90, '', null),
    Column.text('GROSS_SUM_UNIT_SUPPLY', Messages['MfgTotalCostRegLineYGrid.grossSumUnitSupply'], 100, '', null),
];
